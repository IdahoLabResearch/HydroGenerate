Traceback (most recent call last):
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\BASTC\Anaconda3\envs\HG_314\lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Use the streamflow data from a USGS stream gauge - Cont.
# The flow data for this example was created in the previous step. 
head = 100 # ft
power = None
penstock_length = 120 # ft
hp_type = 'Diversion' 
flow_column = '00060_Mean'  # name of the column containing the flow data

hp = calculate_hp_potential(flow= flow, rated_power= power, head= head,
                            penstock_headloss_calculation= True,
                           hydropower_type= hp_type, penstock_length= penstock_length,
                           flow_column= flow_column, annual_caclulation= True)

# Explore output
print('Design flow (cfs):', hp.design_flow)
print('Head_loss at design flow (ft):', round(hp.penstock_design_headloss, 2))
print('Turbine type:', hp.turbine_type)
print('Rated Power (Kw):', round(hp.rated_power, 2))
print('Net head (ft):', round(hp.net_head, 2))
print('Generator Efficiency:',hp.generator_efficiency)
print('Head Loss method:',hp.penstock_headloss_method)
print('Penstock length (ft):', hp.penstock_length)
print('Penstock diameter (ft):', round(hp.penstock_diameter,2))
print('Runner diameter (ft):', round(hp.runner_diameter,2))

print('\nPandas dataframe output: \n', hp.dataframe_output)
print('Annual output: \n', hp.annual_dataframe_output)
------------------

----- stdout -----
Design flow (cfs): 200.0
Head_loss at design flow (ft): 8.94
Turbine type: Crossflow
Rated Power (Kw): 1193.76
Net head (ft): 91.06
Generator Efficiency: 0.98
Head Loss method: Darcy-Weisbach
Penstock length (ft): 120.0
Penstock diameter (ft): 3.31
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mTypeError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[6], line 24[0m
[0;32m     22[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mPenstock length (ft):[39m[38;5;124m'[39m, hp[38;5;241m.[39mpenstock_length)
[0;32m     23[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mPenstock diameter (ft):[39m[38;5;124m'[39m, [38;5;28mround[39m(hp[38;5;241m.[39mpenstock_diameter,[38;5;241m2[39m))
[1;32m---> 24[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mRunner diameter (ft):[39m[38;5;124m'[39m, [38;5;28;43mround[39;49m[43m([49m[43mhp[49m[38;5;241;43m.[39;49m[43mrunner_diameter[49m[43m,[49m[38;5;241;43m2[39;49m[43m)[49m)
[0;32m     26[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;130;01m\n[39;00m[38;5;124mPandas dataframe output: [39m[38;5;130;01m\n[39;00m[38;5;124m'[39m, hp[38;5;241m.[39mdataframe_output)
[0;32m     27[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mAnnual output: [39m[38;5;130;01m\n[39;00m[38;5;124m'[39m, hp[38;5;241m.[39mannual_dataframe_output)

[1;31mTypeError[0m: type NoneType doesn't define __round__ method

